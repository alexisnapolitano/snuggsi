#!/usr/bin/env bash

# Shell Parameter Expansion
#  - https://www.gnu.org/software/bash/manual/html_node/Shell-Parameter-Expansion.html

# Bash string manipulations
#  - http://www.tldp.org/LDP/LG/issue18/bash.html

echo
echo "  ツツツツツツツツツツツツツツツツツツツ "
echo "  ツツツツツ                  ツツツツツ "
echo "  ツツツツツ    snuggsi ツ    ツツツツツ "
echo "  ツツツツツ                  ツツツツツ "
echo "  ツツツツツツツツツツツツツツツツツツツ "
echo


# TODO: Remove global installation assumption.
# This poses problems when installed locally.
declare -a  ARGS=( "${@:2}" ) # sanatize arguments
declare -r  BIN=`dirname $0` # local bin of current script
declare -ar RESOURCES=( "${ARGS[@]:- . }" ) # Default o curren directory
declare -x  NODE_PATH=${NODE_PATH:-`npm config get prefix | awk NR==1`/lib/node_modules} # npm bin -g

echo RESOURCES ${#RESOURCES[@]} ${RESOURCES[@]}
echo NODE_PATH $NODE_PATH
echo BIN $BIN
exit

declare -r  ENTRY=`readlink $BASH_SOURCE`
# https://stackoverflow.com/questions/6393551/what-is-the-meaning-of-0-in-a-bash-script
declare -rx SNUGGSI=$(cd $BIN/`dirname ${ENTRY%/*}`; pwd)
declare -r  COMMAND="$SNUGGSI/bin/$1"

echo ARGS $ARGS
echo BASH SOURCE $BASH_SOURCE
echo readlink BASH SOURCE `readlink $BASH_SOURCE`
echo ENTRY $ENTRY
echo BIN $BIN
echo SNUGGSI $SNUGGSI
echo COMMAND $COMMAND
echo RESOURCES ${#RESOURCES[@]} ${RESOURCES[@]}


function execute {
  local executable=$(basename $COMMAND)

  echo

  if test ! -f $COMMAND || test $executable == snuggsi
    then
      echo "🔴  Invalid command"
      echo
      exit 1
    fi

  echo "📚  MOUNTING RESOURCES …"
  printf '    📁  %s\n' "${RESOURCES[@]}"
  echo

  for RESOURCE in ${RESOURCES[@]}
    do
      if test -d $RESOURCE
        then
          echo " 👉  📂  $RESOURCE ══════════════════════════════════════════"
          $COMMAND $RESOURCE
        else
          echo "🔴  $RESOURCE NOT A DIRECTORY"
      fi
    done

  echo
}


execute $COMMAND
