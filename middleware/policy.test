const
  { test, fetch }
    = require ('test')

, { Server }
    = require ('..')


test ('calling next middleware')


test ("Content-Security-Policy: report-uri 'none'", async t => {

  const
    server   = (new Server).serve ``
  , response = await fetch ('http://localhost:8181/')
  , policy   = response.headers.get ('content-security-policy')


  t.ok ( policy.includes `report-uri 'none'` )

  server.close ``
  t.end ()
})




test ("Content-Security-Policy: default-src 'none'", async t => {

  const
    server   = (new Server).serve ``
  , response = await fetch ('http://localhost:8181/')
  , policy   = response.headers.get ('content-security-policy')


  t.ok ( policy.includes `default-src 'none'` )

  server.close ``
  t.end ()
})


test ("Content-Security-Policy: frame-src 'none'", async t => {

  const
    server   = (new Server).serve ``
  , response = await fetch ('http://localhost:8181/')
  , policy   = response.headers.get ('content-security-policy')


  t.ok ( policy.includes `frame-src 'none'` )

  server.close ``
  t.end ()
})


test ("Content-Security-Policy: connect-src 'none'", async t => {

  const
    server   = (new Server).serve ``
  , response = await fetch ('http://localhost:8181/')
  , policy   = response.headers.get ('content-security-policy')


  t.ok ( policy.includes `connect-src 'none'` )

  server.close ``
  t.end ()
})


test ("content-security-policy: img-src 'none'", async t => {

  const
    server   = (new Server).serve ``
  , response = await fetch ('http://localhost:8181/')
  , policy   = response.headers.get ('content-security-policy')


  t.ok ( policy.includes `img-src 'none'` )

  server.close ``
  t.end ()
})


test ("Content-Security-Policy: style-src 'none'", async t => {

  const
    server   = (new Server).serve ``
  , response = await fetch ('http://localhost:8181/')
  , policy   = response.headers.get ('content-security-policy')


  t.ok ( policy.includes `style-src 'none'` )

  server.close ``
  t.end ()
})


test ("Content-Security-Policy: script-src 'none'", async t => {

  const
    server   = (new Server).serve ``
  , response = await fetch ('http://localhost:8181/')
  , policy   = response.headers.get ('content-security-policy')


  t.ok ( policy.includes `script-src 'none'` )

  server.close ``
  t.end ()
})
