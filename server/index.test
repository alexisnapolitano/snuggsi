// http://taylor.fausak.me/2013/02/17/testing-a-node-js-http-server-with-mocha/

const
  { test, browse, get }
    = require ('test')


, { readFileSync: open }
    = require ('fs')

, Server
    = require ('.')


test ('new Server does not throw', t => {

  t.doesNotThrow ( _ => new Server )

  t.end ()
})


// should this default to current directory ?
test ('serve defaults to `public` when called without argument', t => {

  var server = ( new Server ).serve ()


  get (`http://localhost:${process.env.PORT}/favicon.ico`, response => {
    let raw = ''

    response.on ('data', chunk => (raw += chunk))
    response.on ('end', _ => {
      t.equal (raw, open ('./public/favicon.ico', 'utf-8'))

      server.close ``
      t.end ()
    })
  })
})


// should this default to current directory ?
test ('serve defaults to `public` when called with template literal', t => {

  var server = ( new Server ).serve ``

  get (`http://localhost:${process.env.PORT}/`, response => {
    console.log (response.statusCode)

    server.close ``

    t.end ()
  })
})
